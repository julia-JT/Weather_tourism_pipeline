name: Data Pipeline

on:
  schedule:
    - cron: '0 * * * *'  # Каждый час
  workflow_dispatch:  # Ручной запуск

jobs:
  build:
    runs-on: ubuntu-latest
    env:  # Глобальные переменные окружения
      OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      # Добавьте другие секреты, если нужны (e.g., DATABASE_URL: ${{ secrets.DATABASE_URL }})

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: false
        token: ${{ secrets.REPO_ACCESS_TOKEN }}  # <-- Новый: Используем PAT для push прав
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Совместите с локальной версией
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas  # Или pip install -r requirements.txt, если есть файл
        
    - name: Create data directories
      run: |
        mkdir -p data/raw/openweather_api || echo "Failed to create directories"
        
    - name: Run data collection
      run: |
        python scripts/collect_data.py || echo "Data collection script failed"
        
    - name: Verify files after collection  # <-- Новый: Проверяет файлы после каждого шага
      run: |
        echo "Contents of data/ after collection:"
        ls -la data/ || echo "Data directory not found"
        find data/ -type f -name "*.json" | head -10 || echo "No JSON files found"  # Показывает первые 10 файлов
        
    - name: Upload data files as artifact after collection
      if: always()  # Загружает даже при ошибке
      uses: actions/upload-artifact@v4
      with:
        name: collected-data-after-collection
        path: data/
        if-no-files-found: warn  # Предупредит, если файлов нет

    - name: Run data cleaning
      run: |
        python scripts/clean_data.py || echo "Data cleaning script failed"
        
    - name: Verify files after cleaning
      run: |
        echo "Contents of data/ after cleaning:"
        ls -la data/ || echo "Data directory not found"
        find data/ -type f | head -10 || echo "No files found"
        
    - name: Upload data files as artifact after cleaning
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: collected-data-after-cleaning
        path: data/
        if-no-files-found: warn

    - name: Run data enrichment
      run: |
        python scripts/enrich_data.py || echo "Data enrichment script failed"
        
    - name: Verify files after enrichment
      run: |
        echo "Contents of data/ after enrichment:"
        ls -la data/ || echo "Data directory not found"
        find data/ -type f | head -10 || echo "No files found"
        
    - name: Upload data files as artifact after enrichment
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: collected-data-after-enrichment
        path: data/
        if-no-files-found: warn

    - name: Run report creation
      run: |
        python scripts/create_reports.py || echo "Report creation script failed"
        
    - name: Verify files after reports
      run: |
        echo "Contents of data/ after reports:"
        ls -la data/ || echo "Data directory not found"
        find data/ -type f | head -10 || echo "No files found"
        
    - name: Upload data files as artifact after reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: collected-data-after-reports
        path: data/
        if-no-files-found: warn

    - name: Upload full logs as artifact  # <-- Новый: Загружает логи для анализа
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: workflow-logs
        path: .  # Или укажите конкретный файл логов, если скрипты пишут в него
        if-no-files-found: warn
    
    
    
    - name: Check git status (диагностика)  # Добавьте этот шаг
      run: |
        git status
        ls -la my-new-folder/  # Замените на вашу папку

    - name: Configure Git  # Добавьте этот шаг
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Add, commit, and push  # Добавьте этот шаг
      run: |
        git add .
        git status  # Покажет, что добавлено
        git commit -m "Add/update folder and file via Actions" --allow-empty
        git push https://${{ github.actor }}:${{ secrets.PAT }}@github.com/${{ github.repository }}.git ${{ github.ref_name }}

    - name: Verify push (опционально)  # Добавьте этот шаг, если хотите
      run: echo "Push completed. Check repo for changes."
